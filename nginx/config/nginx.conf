worker_processes 2;

events {
  worker_connections 2048;
}

http {	
	server {
		listen      80;
		listen [::]:80;
		server_name online-service.sonarwhal.com;

		location / {
			rewrite ^ https://$host$request_uri? permanent;
		}

		location ^~ /.well-known/ {
			allow all;
			root  /data/letsencrypt/;
		}
	}

	# If we deploy nginx in a new service without certificates we should comment
	# all the code above after the certificates are created.

	upstream online-service-server {
		server 10.0.0.10:3000;
	}
	
	server {
		listen      443           ssl http2;
		listen [::]:443           ssl http2;
		server_name               online-service.sonarwhal.com;

		ssl                       on;

		add_header                Strict-Transport-Security "max-age=31536000" always;

		ssl_session_cache         shared:SSL:20m;
		ssl_session_timeout       10m;

		ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

		ssl_stapling              on;
		ssl_stapling_verify       on;
		resolver                  8.8.8.8 8.8.4.4;

		ssl_certificate           /etc/letsencrypt/live/online-service.sonarwhal.com/fullchain.pem;
		ssl_certificate_key       /etc/letsencrypt/live/online-service.sonarwhal.com/privkey.pem;
		ssl_trusted_certificate   /etc/letsencrypt/live/online-service.sonarwhal.com/chain.pem;

		access_log                /dev/stdout;
		error_log                 /dev/stderr info;

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_pass http://online-service-server;                    ###Service Name###
			proxy_read_timeout  90;
		}
	}
}
